shine = shine
local plugin = plugin
//addhookevent ("Player", GetMaxSpeed, GetMaxSpeed "activeprepostorsomething")
//addhookevent ("Player", ModifyGravityForce, ModifyGravityForce "activeprepostorsomething") Maybe possible to change global gravity?

initialize
//registercommands
self.users = {}
...Config.

//Waittimebetween = 3 seconds //for testing
//Waittime between = 90 seconds
//rtd_enabled = 1 //for testing
//rtd_enabled = gettime == (fri 12:00am ~ sunday 11:59 pm)

//registercommands
local function RTD ( Client )
local Player = Client:GetControllingPlayer()
//if rtd_enabled = 0 then "Player, RTD is not enabled right now" Shared.Message(Player tried to use RTD when not enabled) end
//if rtd_enabled = 1 and player Waittimebetween seconds then "Player, you must wait X seconds to gamle!" Shared.Message(Player tried to use rtd before timer ended) end
//self.users = {Player}
Shared.Message(Player sucesfully gambled. Now triggering check to determine state of player)
if not Player:GetIsAlive() and Player:GetTeam() == 1 then
Shared.Mesasge(Player is a dead Marine. Now triggering reward or punishment gamble)
//dead marine
end
if not Player:GetIsAlive() and Player:GetTeam() == 2 then
Shared.Mesasge(Player is a dead alien. Now triggering reward or punishment gamble)
//dead alien
end
if Player:GetIsAlive() and Player:GetTeam() == 1 and not Player:isa("Commander") then
//marine alive not commander
Shared.Mesasge(Player is an alive marine . Now triggering reward or punishment gamble)
local MarineorJetpackMarineorExoRoll = math.random(1, 13)
if MarineorJetpackMarineorExoRoll == 1 then
Shared.Mesasge(Alive marine won positive regenerative positive health)
//"X rolled an X and won regenerative health for X seconds"(player, number, kRTDMmarinePosRegenDuration)
Shine.Creativere-occuringtimerforudration(Player, timer name?, repeat every 1 second), self.user = victim?
Player:SetHealth(Player:GetHealth + kRTDMarinePosRegenAmount)
end
if MarineorJetpackMarineorExoRoll == 2 then
Shared.Mesasge(Alive marine won negative regenerative health)
//"X rolled an X and won negative regenerative health for X seconds"(player, number, kRTDMmarineNegRegenDuration)
Shine.Creativere-occuringtimerforudration(Player, timer name?, repeat every 1 second), self.user = victim?
Player:SetHealth(Player:GetHealth - kRTDMarineNegRegenAmount)
end
if MarineorJetpackMarineorExoRoll == 3 then
Shared.Message(Alive marine won random amount of resources)
getrandomnumberbetween(1, 100)
Give X resources that are in tune with the players current resources that do not go above 100
//"X rolled an X and won X resource(s)" (player, number, resnumber)
end
if MarineorJetpackMarineorExoRoll == 4 then
Shared.Message(Alive marine lost random amount of resources)
getrandomnumberbetween(1, 100)
Lose X resources that are in tune with the players current resources that do not drop below 0
//"X rolled an X and won X resource(s)" (player, number, resnumber)
end
if MarineorJetpackMarineorExoRoll == 5 then
Shared.Mesasge(Alive marine won positive regenerative positive armor)
//"X rolled an X and won regenerative armor for X seconds"(player, number, kRTDMmarinePosRegenArmorDuration)
Shine.Creativere-occuringtimerforudration(Player, timer name?, repeat every 1 second), self.user = victim?
Player:SetArmor(Player:GetArmor + kRTDMarinePosRegenArmorAmount)
end
if MarineorJetpackMarineorExoRoll == 6 then
Shared.Mesasge(Alive marine won negative regenerative health)
//"X rolled an X and won negative regenerative armor for X seconds"(player, number, kRTDMmarineNegRegenArmorDuration)
Shine.Creativere-occuringtimerforudration(Player, timer name?, repeat every 1 second), self.user = victim?
Player:SetHealth(Player:GetArmor - kRTDMarineNegRegenArmorAmount)
end
if MarineorJetpackMarineorExoRoll == 7 then
Shared.Mesasge(Alive marine won positive random amount of armor)
getrandomnumberbetween(30, 200)
//"X rolled an X and won X amount of armor!"(player, number, getrandomnumberbetween)
Player.maxArmor = getrandomnumberbetween
Player:SetArmor(getrandomnumberbetween)
//set overlay such as nanoshield so that aliens are aware?
end
if MarineorJetpackMarineorExoRoll == 8 then
if Player:GetArmorLevel() >= 2 then
Shared.Mesasge(Alive marine lost all armor upgrades!)
//"X rolled an X and lost all armor upgrades!"(player, number, getrandomnumberbetween)
//Player.maxArmor = getrandomnumberbetween
//Player:SetArmor(getrandomnumberbetween)
if Player:GetArmor() >= 31 then
Player:SetArmor(30)
Player.armorLevels = 1
end
end
if Player:GetArmorLevel() == 1 then
Shared.Message(Alive marine rolled to lose all armor upgrades, but is already on armor 1. Re-rolling.)
MarineorJetpackMarineorExoRoll
end
if MarineorJetpackMarineorExoRoll == 9 then
if Player:isa("JetPackMarine") then
Shared.Message(X is a jetpackmarine. Now throwing away jetpack!)
local currentarmor = Player:GetArmor()
Player:Replace(jetpackmarine with marine)
Player:SetArmor(currentarmor)
elseif Player:isa("Marine") then
local currentarmor = Player:GetArmor()
Player:Replace(marine with jetpackmarine)
Player:SetArmor(currentarmor)
Shared.Message (X is a  marine. Now give jetpack)
elseif not Player:isa("JetPackMarine") or not Player:isa("Marine") then
Shared.Message (x is not a marine nor jetpack marine, must be an exo. So eject)
Player:EjectExo()
Shared.Message("X got tired of having an exosuit and decided to hop out of it")
end
end
if MarineorJetpackMarineorExoRoll == 10 and Player:isa("Marine") or Player:isa("JetPackMarine") then
"X rolled an X and recieved butter fingers!"
Shared.Message("x dropped all weapons")
Player:DropAllWeapons()
elseif not Player:isa("Marine") or not Player:isa("JetPackMarine") then
Shared.Message("X rolled to loose all weapons but is a exo so re-reolling")
MarineorJetpackMarineorExoRoll
end
if MarineorJetpackMarineorExoRoll == 11 and Player:isa("Marine") or Player:isa("JetPackMarine") and Player:GetWeaponInHudSlot(1) == "Rifle" then
Shared.Message ( Player is a marine/jetpackmarine with rifle in slot 1. Now randomizing weapon reward")
GetRandomNumber(1,3)
if number == 1 then  Player:GiveItem(HeavyRifle) Shared.Message("Upgraded lmg to hmg")
elseif number == 2 then Player:GiveItem(GrenadeLauncher) Shared.Message("Upgraded lmg to gl")
elseif number == 3 then Player:GiveItem(FlameThrower) Shared.Message("Upgraded lmg to fl")
end
if MarineorJetpackMarineorExoRoll == 12 and Player:isa("Marine") or Player:isa("JetPackMarine") then
Shared.Message("X rolled to get infinite ammo for 30 seconds")
local restoreclipto = Player:GetActiveWeapon():GetClip()
Player:GetActiveWeapon():SetClip(-1) 
Shine.SimpleTimer.Create(Player, 30, function () Player:GetActiveWeapon():SetClip(restoreclipto) end)
//Shine.Timer.Create("Inf Ammo", 30, 1, function() 
elseif not Player:isa("Marine") or not Player:isa("JetPackMarine") then
Shared.Message("X rolled to get infinite ammo but is a exo so re-reolling")
MarineorJetpackMarineorExoRoll
end
if MarineorJetpackMarineorExoRoll == 13 then 
local MiniRollNumberThirteen = math.random(1,6)
if MiniRollNumberThirteen == 1 then
Shared.Message("X rolled 30 second nano shield")
"x rolled and and won 30 second nanoshield"
                           //lasts 5 seconds so re-apply it every 5 seconds
self:CreateTimer("Nano", 30, 5, function () Player:ActivateNanoShield() end)
elseif MiniRollNumberThirteen == 2 then
Shared.Message("X rolled 30 second rupture")
"x rolled and and won 30 second rupture"
                           //lasts 3 seconds so re-apply it every 5 seconds
self:CreateTimer("Rupture", 30, 3, function () Player:SetRuptured() end)
elseif MiniRollNumberThirteen == 3 then
Shared.Message("X rolled 30 flashlight of peace")
"x rolled and and won 30 second flashlight of peace"
                      //turn flashlight on/off every 0.3 seconds for 30 seconds for the lulz
self:CreateTimer("FlashlightOn", 30, 0.1, function () Player:SetFlashlightOn(true) end)
self:CreateTimer("FlashlightOff", 30, 0.2, function () Player:SetFlashLightOn(false) end)
elseif MiniRollNumberThirteen == 4 then
Shared.Message("X rolled to get parasited")
"X rolled an X and won the gift of a parasite")
Player:OnParasited()
elseif MiniRollNumberThirteen == 5 then
Shared.Message("X Won 3 cat packs")
"X rolled an X and won 3 cat packs!")
                      //catpacks last 12 seconds eah
self:CreateTimer("FlashlightOn", 36, 12, function () Player:ApplyCatPack() end)
elseif MiniRollNumberThirteen == 6 and Player:isa("Marine") or Player:isa("JetPackMarine") and Player:GetIsOnGround() then
Shared.Message("X Won a stun!")
"X rolled an X and recieved a stone cold stunner for 10 seconds")
Player:SetStun(10)
elseif MiniRollNumberThirteen == 6 and not Player:isa("Marine") or not Player:isa("JetPackMarine") or not Player:GetIsOnGround() then
Shared.Message("X would have won a stun, but is either an exo or not on the ground. Re-Rolling")
MiniRollNumberThirteen
end
end
if Player:GetIsalive() and Player:GetTeam() == 1 and Player:isa("Commander") then
//marine alive commander
Shared.Mesasge(Player is an alive marine commander. Now triggering reward or punishment gamble)
if 
end
if Player:GetIsAlive() and Player:GetTeam() == 2 and not Player:isa("Commander") then
Shared.Mesasge(Player is an alive alien. Now triggering reward or punishment gamble)
//alien alive not commander
local AlienRoll = math.random(1, 8)
if AlienRoll  == 1 then
Shared.Message(Alive alien won random amount of resources)
getrandomnumberbetween(1, 100)
Give X resources that are in tune with the players current resources that do not go above 100
//"X rolled an X and won X resources" (player, number, resnumber)
end
if AlienRoll  == 2 then
Shared.Message(Alive alien lost random amount of resources)
getrandomnumberbetween(1, 100)
Lose X resources that are in tune with the players current resources that do not drop below 0
//"X rolled an X and won X resources" (player, number, resnumber)
end
if AlienRoll  == 3 then
//Shared.Mesasge(Alive alien won regenerative positive energy)
"X rolled an X and won positive regenerative energy for X seconds"(player, number, kRTDAlienPosEnergyDuration)
Shine.Creativere-occuringtimerforudration(Player, timer name?, repeat every 1 second), self.user = victim?
Player:SetEnergy(Player:GetEnergy + kRTDAlienPosEnergyAmount)
end
if AlienRoll  == 4 then
Shared.Mesasge(Alive alien won regenerative negative energy)
//"X rolled an X and won negative regenerative energy for X seconds"(player, number, kRTDAlienNegEnergyDuration)
Shine.Creativere-occuringtimerforudration(Player, timer name?, repeat every 1 second), self.user = victim?
Player:SetEnergy(Player:GetEnergy + kRTDAlienNegEnergyAmount)
end
if AlienRoll  == 5 and Player:isa("Gorge") then
Shared.Message(Player is a gorge and won a gorge reward.)
Player:OnAdjustModelCoords(xyz) = kRtdGorgeScaleSize
end
if AlienRoll  == 5 and not Player:isa("Gorge") then
GetRandomNumberBetween(1,5)
Shared.Message(Player is not a gorge and won a gorge reward. Re-rolling)
AlienRoll
end
if AlienRoll  == 6 then
Shared.Message "X rolled an X and won the change class ability. Now determining current class, and change to class)
GetRandomNumberBetween(1,5)
local techId = Player:GetTechId()
Shared.Message "X player is an X techid"
if number == 1 then 
ChangeTo = kTechId.Skulk
Shared.Message "X player won a skulk change to'
elseif number == 2 then 
ChangeTo = kTechId.Gorge
Shared.Message "x player won a gorge change to"
elseif number == 3 then 
ChangeTo = kTechId.Lerk
Shared.Message "x player won a Lerk change to"
elseif number == 4 then
ChangeTo = kTechId.Fade
Shared.Message "x player won a Fade change to"
elseif number == 5 then
ChangeTo == kTechId.Onos
Shared.Message "x player won a Onos change to"
end
if techId == ChangeTo then Shared.Message "X player is a techid and won a ChangeTo, since both match, now re-rolling what to change to!" AlienRoll end
if techId ~= ChangeTo then
Shared.Message ("X player changed class from X to X since no match!")
//"X rolled an X and changed from an X to an X!" (Player, number, old class, new class)
Player:Replace (old class to new)
end
end
if AlienRoll == 7  then
local AlienRollNumber7 = math.random(1,4)]
Shared.Message(Player won a random effect)
if AlienRollNumber7 == 1 then Player:TriggerEnzyme(kRTDEnzymeDuration) Shared.Message("Player won enzyme for kRTDEnzymeDuration") "x player rolled x and won kRTDEnzymeDuration seconds of enzyme!") 
elseif AlienRollNumber7 == 2 then Player:SetElectrified(kRTDElectrifyDuration) Shared.Message(Player won electrify for kRTDElectrifyDuration) "x player rolled x and won kRTDElectrifyDuration seconds of enzyme!")
elseif AlienRollNumber7 == 3 then FireMixin:SetOnFire(attacker, doer) Shared.Message(Player won "set on fire!") "x Player rolled X and has been set on fire!"
elseif AlienRollNumber7 == 4 then MucousableMixin:SetMucousShield() Shared.Message(Player won "mucous membrane!") "x player rolled X and won Mucous Membrane!" 
end
end
if AlienRoll == 8 then
Shared.Message ("Player won redemption trigger")
"X rolled X and decided to teleport back to the hive!"
Insert redemption teleport trigger thing here
end
end
if Player:GetIsAlive() and Player:GetTeam() == 2 and Player:isa("Commander") then
//alien alive commander
Shared.Mesasge(Player is an alive alien commander. Now triggering reward or punishment gamble)
if 
end
if Player:Player:isa("ReadyRoomTeam") then
//ready room 
Shared.Mesasge(Player is an ready room player. Now triggering reward or punishment gamble)
end
if not Player:GetTeam() == 1 or Player:GetTeam() == 2 and Player:isa("Spectator") then
//spectator
Shared.Mesasge(Player is an spectate team. Now triggering reward or punishment gamble)
end
//end


local RTDCommand(....registercommand "sh_rtd", {"rtd", "rollthedice"}, RTD, forcesilent, true}
targetparam = (client)
...help ("Gambles the odds to give the player a reward or punishment based on random chance"}


//client lua

//function OnEntityKilled(Victim)
//if Vitim = self.users then
//Victim(CancelRTDTimer)
//if victim has bounty then give reward to attacker
//if victim has bounty and no attacker or attacker == self then self deduct pres
//shared.message(RTD user has been killed)
//end

//function GetMaxSpeed(possible)
//if 
//end
//if rtd_enabled then addsidebutton ~ "Rollthedice" shared.command ("sh_rtd") end